{"version":3,"sources":["cart-oop.js"],"names":["Cart","localStorageKey","cartItems","loadFromStorage","this","JSON","parse","localStorage","getItem","productId","quantity","deliveryOptionId","setItem","stringify","addToCart","matchingItem","forEach","cartItem","newCart","push","saveToStorage","cart","console","businessCart","log"],"mappings":"aAAA,SAASA,KAAKC,GA2EZ,MA1Ea,CADfC,eAAcD,EAKVE,gBAJW,WAKTC,KAAKF,UAAYG,KAAKC,MAAMC,aAAaC,QAAQP,IAE5CG,KAAKF,YACRE,KAAKF,UAAY,CAAC,CAChBO,UAAW,uCACXC,SAAU,EACVC,iBAAkB,KACjB,CACDF,UAAW,uCACXC,SAAU,EACVC,iBAAkB,QAMtBJ,cArBS,WAAAA,aAAAK,QAAAX,EAAAI,KAAAQ,UAAAT,KAAAF,aA2BTY,UA3BS,SA2BJZ,GACH,IAAAa,EAECX,KAAAF,UAAAc,QAAA,SAAAC,GAHHR,IAAAQ,EAAAR,YAEIM,EAAeE,KAOjBF,EACEN,EAAWA,UADO,EAGlBE,KAAAA,UAAAA,KAAkB,CAHpBF,UAAAA,EAKDC,SAAA,EAFGC,iBAAkB,MAUtBP,KAAKF,iBAEDgB,eAnDK,SAmDGC,GACT,IAAAD,EAAA,GAGHd,KAAKF,UAALc,QAAiBE,SAAjBD,GAEKG,EAAAA,YAALX,GAzDSS,EAAAC,KAAAF,KA+DPb,KAAAF,UAAagB,EAEZd,KAAAgB,iBAGHL,qBApES,SAoEIJ,EAAbA,GAEA,IAAAI,EAtEJX,KAAAF,UAAAc,QAAA,SAAAC,GA0EOI,IAAPJ,EAAAR,YACDM,EAAAE,KAMId,EAAAA,iBAALQ,EAIAW,KAAAF,kBARA,IAAMC,KAAOrB,KAAK,YACZuB,aAAevB,KAAK,iBAG1BqB,KAAKlB,kBAELoB,aAAapB,kBAEbmB,QAAQE,IAAIH,MACZC,QAAQE,IAAID","file":"cart-oop.min.js","sourcesContent":["function Cart(localStorageKey) {\r\n  const cart = {\r\n    cartItems: undefined,\r\n  \r\n  \r\n    loadFromStorage(){\r\n      this.cartItems = JSON.parse(localStorage.getItem(localStorageKey));\r\n    \r\n      if (!this.cartItems) {\r\n        this.cartItems = [{\r\n          productId: 'e43638ce-6aa0-4b85-b27f-e1d07eb678c6',\r\n          quantity: 2,\r\n          deliveryOptionId: '1'\r\n        }, {\r\n          productId: '15b6fc6f-327a-4ec4-896f-486349e85a3d',\r\n          quantity: 1,\r\n          deliveryOptionId: '2'\r\n        }];  \r\n      }\r\n    },\r\n  \r\n    saveToStorage() {\r\n      localStorage.setItem(localStorageKey, JSON.stringify(this.cartItems));\r\n    },\r\n  \r\n    addToCart(productId) {\r\n      let matchingItem;\r\n    \r\n      this.cartItems.forEach((cartItem) => {\r\n        if (productId === cartItem.productId) {\r\n          matchingItem = cartItem;\r\n        }\r\n      });\r\n    \r\n      if (matchingItem) {\r\n        matchingItem.quantity += 1;\r\n      } else {\r\n        this.cartItems.push({\r\n          productId: productId,\r\n          quantity: 1,\r\n          deliveryOptionId: '1'\r\n        });\r\n      }\r\n  \r\n  \r\n      this.saveToStorage();\r\n    },\r\n    removeFromCart(productId) {\r\n      const newCart = [];\r\n    \r\n      this.cartItems.forEach((cartItem) => {\r\n        if (cartItem.productId !== productId) {\r\n          newCart.push(cartItem);\r\n        }\r\n      });\r\n    \r\n      this.cartItems = newCart;\r\n    \r\n      this.saveToStorage();\r\n    },\r\n    updateDeliveryOption(productId, deliveryOptionId) {\r\n      let matchingItem;\r\n    \r\n      this.cartItems.forEach((cartItem) => {\r\n        if (productId === cartItem.productId) {\r\n          matchingItem = cartItem;\r\n        }\r\n      });\r\n    \r\n      matchingItem.deliveryOptionId = deliveryOptionId;\r\n    \r\n      this.saveToStorage();\r\n    }\r\n  };\r\n\r\n  return cart;\r\n}\r\n\r\nconst cart = Cart('cart-oop');\r\nconst businessCart = Cart('cart-business');\r\n\r\n\r\ncart.loadFromStorage();\r\n\r\nbusinessCart.loadFromStorage();\r\n\r\nconsole.log(cart);\r\nconsole.log(businessCart);"]}