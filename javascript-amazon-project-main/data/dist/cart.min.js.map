{"version":3,"sources":["cart.js"],"names":["cart","loadFromStorage","exports","JSON","parse","localStorage","getItem","productId","quantity","deliveryOptionId","stringify","matchingItem","forEach","cartItem","saveToStorage","removeFromCart","newCart","push","updateDeliveryOption","loadCart","fun","xhr","XMLHttpRequest","addEventListener","console","log","response","open"],"mappings":"aACO,IAAIA,KAIJ,SAASC,kBACdC,QAAAF,KAAAA,KAAOG,KAAKC,MAAMC,aAAaC,QAAQ,SAElCN,OACHE,QAAAF,KAAAA,KAAO,CAAC,CACNO,UAAW,uCAVjBC,SAAA,EACWR,iBAAJ,KAYA,CAVPC,UAAe,uCAYTO,SAAU,EAVTC,iBAAA,OAMDD,SAAAA,gBACAC,aAAAA,QAAgB,OAAEN,KAAAO,UAAAV,OAIlBS,SAAAA,UAAkBF,GAHjB,IAJHI,EAUHX,KAAAY,QAAA,SAAAC,GAYON,IAAcM,EAASN,YAT/BI,EAASG,KAKFH,EACLA,EAAIA,UAAJ,EAGEX,KAAIO,KAAAA,CACFI,UAAAA,EACDH,SAAA,EAHHC,iBAAA,MAOEE,gBAGEJ,SAASQ,eADDR,GAERC,IAAAA,EAFQ,GAAAR,KAAVY,QAAA,SAAAC,GAKDA,EAAAN,YAAAA,GASGS,EAAQC,KAAKJ,KALZX,QAAAF,KAAAA,KAASe,EAGdf,gBAGG,SAAAkB,qBAAAX,EAAAE,GACF,IAJDE,EAQAG,KAAAA,QAAa,SAAAD,GACdN,IAAAM,EAAAN,YAOKI,EAAeE,KADjBF,EAAIJ,iBAAuBA,EAE1BO,gBAKHA,SAAaK,SAAAC,GACd,IAAAC,EAAA,IAAAC,eAEMD,EAAAE,iBAAuB,OAAA,WAC5BC,QAAYC,IAAIH,EAAAA,UAGEI,mBAAhBN,GAGEA,MAEHC,EANDM,KAAA,MAAA,uCAQAN,EAAIM,0RApFN1B","file":"cart.min.js","sourcesContent":["// Deduplicating data or Normalizing data\r\nexport let cart;\r\n\r\nloadFromStorage();\r\n\r\nexport function loadFromStorage(){\r\n  cart = JSON.parse(localStorage.getItem('cart'));\r\n\r\n  if (!cart) {\r\n    cart = [{\r\n      productId: 'e43638ce-6aa0-4b85-b27f-e1d07eb678c6',\r\n      quantity: 2,\r\n      deliveryOptionId: '1'\r\n    }, {\r\n      productId: '15b6fc6f-327a-4ec4-896f-486349e85a3d',\r\n      quantity: 1,\r\n      deliveryOptionId: '2'\r\n    }];  \r\n  }\r\n}\r\n\r\n\r\nfunction saveToStorage() {\r\n  localStorage.setItem('cart', JSON.stringify(cart));\r\n}\r\n\r\n\r\nexport function addToCart(productId) {\r\n  let matchingItem;\r\n\r\n  cart.forEach((cartItem) => {\r\n    if (productId === cartItem.productId) {\r\n      matchingItem = cartItem;\r\n    }\r\n  });\r\n\r\n  if (matchingItem) {\r\n    matchingItem.quantity += 1;\r\n  } else {\r\n    cart.push({\r\n      productId: productId,\r\n      quantity: 1,\r\n      deliveryOptionId: '1'\r\n    });\r\n  }\r\n  saveToStorage();\r\n}\r\n\r\nexport function removeFromCart(productId) {\r\n  const newCart = [];\r\n\r\n  cart.forEach((cartItem) => {\r\n    if (cartItem.productId !== productId) {\r\n      newCart.push(cartItem);\r\n    }\r\n  });\r\n\r\n  cart = newCart;\r\n\r\n  saveToStorage();\r\n}\r\n\r\nexport function updateDeliveryOption(productId, deliveryOptionId) {\r\n  let matchingItem;\r\n\r\n  cart.forEach((cartItem) => {\r\n    if (productId === cartItem.productId) {\r\n      matchingItem = cartItem;\r\n    }\r\n  });\r\n\r\n  matchingItem.deliveryOptionId = deliveryOptionId;\r\n\r\n  saveToStorage();\r\n}\r\n\r\nexport function loadCart(fun) {\r\n  const xhr = new XMLHttpRequest();\r\n\r\n  xhr.addEventListener('load', () => {\r\n    console.log(xhr.response);\r\n\r\n    if (typeof fun === 'function'){\r\n      fun();\r\n    }\r\n  });\r\n\r\n  xhr.open('GET', 'https://supersimplebackend.dev/cart');\r\n  xhr.send();\r\n}"]}