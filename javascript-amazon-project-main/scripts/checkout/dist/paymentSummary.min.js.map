{"version":3,"sources":["paymentSummary.js"],"names":["_cart","require","_products","_deliveryOptions","_money","_orders","renderPaymentSummary","productPriceCents","shippingPriceCents","cart","forEach","cartItem","product","getProduct","productId","priceCents","quantity","deliveryOption","getDeliveryOption","deliveryOptionId","taxCents","totalBeforeTaxCents","paymentSummaryHTML","formatCurrency","headers","totalCents","document","querySelector","console","window","location","href","fetch","method","Content-Type","body","JSON","stringify","response","json","order","addOrder","log"],"mappings":"sHAAA,IAAAA,MAAAC,QAAA,sBACAC,UAAAD,QAAA,0BACAE,iBAAAF,QAAA,iCACAG,OAAAH,QAAA,qBACAI,QAAAJ,QAAA,wBAEO,SAASK,uBANhB,IAAAC,EAAA,EAQMC,EAAqB,EAN3BC,MAAAA,KAAAC,QAAA,SAAAC,GAUI,IAAMC,GAAU,EAAAV,UAAAW,YAAWF,EAASG,WATxCP,GAAAK,EAAAG,WAAAJ,EAAAK,SACA,IAAAC,GAAA,EAAAd,iBAAAe,mBAAAP,EAAAQ,kBAYIX,GAAsBS,EAAeF,aARvC,IAAIP,EAAJD,EAAAC,EAYMY,EAAiC,GAAtBC,EATjBZ,EAAaY,EAAcD,EAEzBb,EAAqBK,uMAAAA,QAUjBU,EAAAA,OAAAA,gBAAkBf,GAVDK,6JAAAA,QAuDM,EAAAR,OAAAmB,gBAAAf,GAvDNI,oKAAAA,QA2DfY,EAAAA,OAAAA,gBAASH,GA3DMT,0JAAAA,QAyDqD,EAAAR,OAAAmB,gBAF/CH,GAvDNR,8JAAAA,QA0Cd,EAAAR,OAAAmB,gBAAeE,GA1CDb,+JAuDMc,SAAAC,cAAA,uBAgBvBC,UAAAA,EAhBuBF,SAAAC,cAAA,mBAmBzBE,iBAAOC,QAASC,WAAAA,IAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAnBSC,MAAA,wCAAA,CAAAC,OAAA,OAAAT,QAAA,CAAAU,eAAA,oBAAAC,KAAAC,KAAAC,UAAA,CAD7B5B,KAAAA,MAAAA,UAoBoBsB,KAAAA,EAAAA,OAnBSO,EAmBTP,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAPMO,EAASC,QAOfR,KAAAA,EAPRS,EAOQT,EAAAA,MANd,EAAA1B,QAAAoC,UAASD,GAMKT,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAHdH,QAAQc,IAAI,sCAGEX,KAAAA,GAAhBF,OAAOC,SAASC,KAAO,cAAPA,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA","file":"paymentSummary.min.js","sourcesContent":["import {cart} from '../../data/cart.js';\r\nimport{getProduct} from '../../data/products.js';\r\nimport { getDeliveryOption } from '../../data/deliveryOptions.js';\r\nimport {formatCurrency} from '../utils/money.js';\r\nimport { addOrder } from '../../data/orders.js';\r\n\r\nexport function renderPaymentSummary() {\r\n  let productPriceCents = 0;\r\n  let shippingPriceCents = 0;\r\n\r\n\r\n  cart.forEach((cartItem) => {\r\n    const product = getProduct(cartItem.productId);\r\n    productPriceCents += product.priceCents * cartItem.quantity;\r\n\r\n    const deliveryOption = getDeliveryOption(cartItem.deliveryOptionId);\r\n    shippingPriceCents += deliveryOption.priceCents;\r\n  });\r\n\r\n  const totalBeforeTaxCents = productPriceCents + shippingPriceCents;\r\n  const taxCents = totalBeforeTaxCents * 0.1;\r\n  const totalCents = totalBeforeTaxCents + taxCents;\r\n\r\n  const paymentSummaryHTML = `\r\n    <div class=\"payment-summary-title\">\r\n      Order Summary\r\n    </div>\r\n\r\n    <div class=\"payment-summary-row\">\r\n      <div>Items (3):</div>\r\n      <div class=\"payment-summary-money\">\r\n      $${formatCurrency(productPriceCents)}</div>\r\n    </div>\r\n\r\n    <div class=\"payment-summary-row\">\r\n      <div>Shipping &amp; handling:</div>\r\n      <div class=\"payment-summary-money\">\r\n      ${formatCurrency(shippingPriceCents)}</div>\r\n    </div>\r\n\r\n    <div class=\"payment-summary-row subtotal-row\">\r\n      <div>Total before tax:</div>\r\n      <div class=\"payment-summary-money\">\r\n      $${formatCurrency(totalBeforeTaxCents)}</div>\r\n    </div>\r\n\r\n    <div class=\"payment-summary-row\">\r\n      <div>Estimated tax (10%):</div>\r\n      <div class=\"payment-summary-money\">\r\n      $${formatCurrency(taxCents)}</div>\r\n    </div>\r\n\r\n    <div class=\"payment-summary-row total-row\">\r\n      <div>Order total:</div>\r\n      <div class=\"payment-summary-money\">\r\n        $${formatCurrency(totalCents)}</div>\r\n    </div>\r\n\r\n    <button class=\"place-order-button button-primary add-to-cart-button js-place-order\">\r\n      Place your order\r\n    </button>\r\n\r\n  `;\r\n\r\n  document.querySelector('.js-payment-summary')\r\n    .innerHTML = paymentSummaryHTML;\r\n\r\n  document.querySelector('.js-place-order')\r\n    .addEventListener('click', async () => {\r\n      try {\r\n        const response = await fetch('https://supersimplebackend.dev/orders', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            cart: cart\r\n          })\r\n        });\r\n  \r\n        const order = await response.json();\r\n        addOrder(order);\r\n        \r\n      } catch (error) {\r\n        console.log('Unexpected error. Try again later.');\r\n      }\r\n      \r\n      window.location.href = 'orders.html';\r\n    });\r\n}"]}