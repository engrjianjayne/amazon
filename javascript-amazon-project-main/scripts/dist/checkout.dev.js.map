{"version":3,"sources":["checkout.js"],"names":["loadPage","Promise","resolve","value"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;AACA;AAEA,SAAeA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACQ,kCADR;;AAAA;AAAA;AAAA,0CAGqB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC1C,gCAAS,YAAM;AACbA,cAAAA,OAAO,CAAC,OAAD,CAAP;AACD,aAFD;AAGD,WAJkB,CAHrB;;AAAA;AAGOC,UAAAA,KAHP;AASE;AACA;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaAH,QAAQ;AAER;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;AAsBA","sourcesContent":["import {renderOrderSummary} from './checkout/orderSummary.js';\r\nimport {renderPaymentSummary} from './checkout/paymentSummary.js';\r\nimport { loadProducts, loadProductsFetch } from '../data/products.js';\r\nimport { loadCart } from '../data/cart.js';\r\n// import '../data/cart-class.js';\r\n// import '../data/backend-practice.js';\r\n\r\nasync function loadPage() {\r\n  await loadProductsFetch();\r\n\r\n const value = await new Promise((resolve) => {\r\n    loadCart(() => {\r\n      resolve('value');\r\n    });\r\n  });\r\n\r\n  renderOrderSummary();\r\n  renderPaymentSummary();\r\n\r\n}\r\nloadPage();\r\n\r\n/*\r\nPromise.all([\r\n  loadProductsFetch(),\r\n  new Promise((resolve) => {\r\n    loadCart(() => {\r\n      resolve();\r\n    });\r\n  })\r\n\r\n]).then((values) =>{\r\n  console.log(values);\r\n  renderOrderSummary();\r\n  renderPaymentSummary();\r\n});\r\n*/\r\n\r\n/*\r\nnew Promise((resolve) => {\r\n  loadProducts(() => {\r\n    resolve('value1');\r\n  });\r\n\r\n}).then((value) => {\r\n  console.log(value);\r\n\r\n  return new Promise((resolve) => {\r\n    loadCart(() => {\r\n      resolve();\r\n    });\r\n  });\r\n\r\n}).then(() => {\r\n  renderOrderSummary();\r\n  renderPaymentSummary();\r\n});\r\n*/\r\n\r\n\r\n/*\r\nloadProducts(() => {\r\n  loadCart(() => {\r\n    renderOrderSummary();\r\n    renderPaymentSummary();\r\n  });\r\n});\r\n*/"],"file":"checkout.dev.js"}